package Projects_Of_Projects;

import java.util.Scanner;

interface BasicConfiguration {
    /*
    Login
    View all employees
    Create employee
    Edit employee
    Delete employee
    Save data
     */
    void login();
    void viewAllEmployees();
    void createEmployee();
    void updateSpecificEmployeeDetailOnly();
    abstract public void updateAllEmployeeDetailsAtOnce();
    void deleteEmployee();
    void saveData();
}
abstract class Login implements BasicConfiguration{
    Scanner scanner = new Scanner(System.in); // This is Scanner Class Which is Derived into Entire
    // Program this Scanner is placed in the main hierarchy or in main class of the program

    public void login(){

    }

    abstract public void viewAllEmployees();
    abstract public void createEmployee();
    abstract public void updateSpecificEmployeeDetailOnly();
    abstract public void updateAllEmployeeDetailsAtOnce();
    abstract public void deleteEmployee();
    abstract public void saveData();
}
class CreateEmployee extends Login{

    String Username,Password;   // This field is used by Login function
    String First_Name;
    String Last_Name;
    String SerialNumber;   // Automatic Generated By a program
    String Department;
    String DOB;
    String BirthPlace;
    String Address;
    long Postal_Code;
    int Age;
    int Salary;

    // This is the Welcome Screen of the project
    public void MainWelcomeScreen(){
        System.out.println("" +
                "                                                             db   d8b   db      d88888b      db            .o88b.       .d88b.       .88b  d88.      d88888b     \n" +
                "                                                             88   I8I   88      88'          88           d8P  Y8      .8P  Y8.      88'YbdP`88      88'         \n" +
                "                                                             88   I8I   88      8800000      88           8P           88    88      88  88  88      88ooooo     \n" +
                "                                                             Y8   I8I   88      88~~~~~      88           8b           88    88      88  88  88      88~~~~~     \n" +
                "                                                             `8b d8'8b d8'      88.          88booo.      Y8b  d8      `8b  d8'      88  88  88      88.         \n" +
                "                                                              `8b8' `8d8'       Y88888P      Y88888P       `Y88P'       `Y88P'       YP  YP  YP      Y88888P     \n");
        System.out.println("" +
                "                                                                                                      _______   _____                                               \n" +
                "                                                                                                      |_   _|  / () \\                                              \n" +
                "                                                                                                        |_|    \\____/                                              \n");

        System.out.println("" +
                "                                                       ▄████████     ▄▄▄▄███▄▄▄▄        ▄███████▄    ▄█          ▄██████▄    ▄██   ▄        ▄████████      ▄████████ \n" +
                "                                                      ███    ███   ▄██▀▀▀███▀▀▀██▄     ███    ███   ███         ███    ███   ███   ██▄     ███    ███     ███    ███ \n" +
                "                                                      ███    █▀    ███   ███   ███     ███    ███   ███         ███    ███   ███▄▄▄███     ███    █▀      ███    █▀  \n" +
                "                                                     ▄███▄▄▄       ███   ███   ███     ███    ███   ███         ███    ███   ▀▀▀▀▀▀███    ▄███▄▄▄        ▄███▄▄▄     \n" +
                "                                                    ▀▀███▀▀▀       ███   ███   ███   ▀█████████▀    ███         ███    ███   ▄██   ███   ▀▀███▀▀▀       ▀▀███▀▀▀     \n" +
                "                                                      ███    █▄    ███   ███   ███     ███          ███         ███    ███   ███   ███     ███    █▄      ███    █▄  \n" +
                "                                                      ███    ███   ███   ███   ███     ███          ███▌    ▄   ███    ███   ███   ███     ███    ███     ███    ███ \n" +
                "                                                      ██████████    ▀█   ███   █▀     ▄████▀        █████▄▄██    ▀██████▀     ▀█████▀      ██████████     ██████████ \n\n");

        System.out.println("" +
                "                                                    o     o                                                          o    .oPYo.                 o                 \n" +
                "                                                    8b   d8                                                          8    8                      8                 \n" +
                "                                                    8`b d'8 .oPYo. odYo. .oPYo. .oPYo. .oPYo. ooYoYo. .oPYo. odYo.  o8P   `Yooo. o    o .oPYo.  o8P .oPYo. ooYoYo. \n" +
                "                                                    8 `o' 8 .oooo8 8' `8 .oooo8 8    8 8oooo8 8' 8  8 8oooo8 8' `8   8        `8 8    8 Yb..     8  8oooo8 8' 8  8 \n" +
                "                                                    8     8 8    8 8   8 8    8 8    8 8.     8  8  8 8.     8   8   8         8 8    8   'Yb.   8  8.     8  8  8 \n" +
                "                                                    8     8 `YooP8 8   8 `YooP8 `YooP8 `Yooo' 8  8  8 `Yooo' 8   8   8    `YooP' `YooP8 `YooP'   8  `Yooo' 8  8  8 \n" +
                "                                                    ..::::..:.....:..::..:.....::....8 :.....:..:..:..:.....:..::..::..::::.....::....8 :.....:::..::.....:..:..:..\n" +
                "                                                    ::::::::::::::::::::::::::::::ooP'.::::::::::::::::::::::::::::::::::::::::::::ooP'.:::::::::::::::::::::::::::\n" +
                "                                                    ::::::::::::::::::::::::::::::...::::::::::::::::::::::::::::::::::::::::::::::...:::::::::::::::::::::::::::::\n\n");

        System.out.println("Choose Options to Perform Certain Task" +
                "\n 1  Enter in Main Menu list" +
                "\n 2  Exit to the program");
        int input=scanner.nextInt();

        if(input==1){
            Main_Menu_List();
        }
        else{
            System.exit(0);
        }
    }

    public void createEmployee(){

        System.out.println("Enter your First name");
        this.First_Name=scanner.nextLine();

        System.out.println("Enter your Last name");
        this.Last_Name= scanner.nextLine();

        System.out.println("Enter your (Date-Of-Birt) format type String");
        this.DOB=scanner.nextLine();

        System.out.println("Enter your Birth Place");
        this.BirthPlace=scanner.nextLine();

        System.out.println("Enter your Age");
        this.Age= scanner.nextInt();

        System.out.println("Enter your Salary");
        this.Salary=scanner.nextInt();

        System.out.println("Enter your Address");
        this.Address=scanner.nextLine();

        System.out.println("Enter your Postal_Code");
        this.Postal_Code= scanner.nextLong();    // Make a function in which your can only enter maximum seven digit of postal-code

        System.out.println("Enter your Department");
        this.Department=scanner.nextLine();

        //-------------------------------------------------------
        this.SerialNumber=serialNoGenerator(5);  // This is random number generator function which assigning values to the Serial number of Employee

        System.out.println("Your Serial Number is  -->  ");
        System.out.print(this.SerialNumber);

        System.out.println("Thank Your for Enter Employee Details");
        System.out.println("\n\n----------------- Redirecting into Main Menu ------------------");
        Main_Menu_List();
    }

    // Generating Random String
    public String serialNoGenerator(int n){
        String RandomString="ABCDEFGHIJKLMNOPQRSTUVWXYZ"+"0123456789"+"abcdefghijklmnopqrstuvwxyz";

        // n is size of the string Builder sb
        StringBuilder sb= new StringBuilder(n);

        for(int i=0;i<n;i++){
            // Generating Random number limited to the StringLength
            int index = (int)(RandomString.length()*Math.random());

            sb.append(RandomString.charAt(index));
        }
        return sb.toString();
    }

    public void updateSpecificEmployeeDetailOnly(){
        System.out.println("What you want to update in your Detail" +
                "\n1  Employee First_name then ( Last_name )" +
                "\n2  Employee Department" +
                "\n3  Employee Date-Of-Birth" +
                "\n4  Employee Birth Place" +
                "\n5  Employee Address" +
                "\n6  Employee Postal Code"+
                "\n7  Employee Age" +
                "\n8  Employee Salary");
        int input= scanner.nextInt();
        switch (input){
            case 1: // Here we use getter and setters or switch case is the best
                System.out.println("Enter your First Name ( For Update )");
                this.First_Name=scanner.nextLine();

                System.out.println("Enter your Last Name ( For Update )");
                this.Last_Name=scanner.nextLine();

                System.out.println("Thank Your For Updating your Name");
                break;
            case 2:
                System.out.println("Enter Your Department");
                this.Department=scanner.nextLine();
                break;
            case 3:
                System.out.println("Enter your Date of Birth");
                this.DOB=scanner.nextLine();
                break;
            case 4:
                System.out.println("Enter your Birth place");
                this.BirthPlace=scanner.nextLine();
                break;
            case 5:
                System.out.println("Enter Your Employee Address");
                this.Address=scanner.nextLine();
                break;
            case 6:
                System.out.println("Enter your Postal Code");
                this.Postal_Code = scanner.nextInt();
                break;
            case 7:
                System.out.println("Enter your Age");
                this.Age=scanner.nextInt();
                break;
            case 8:
                System.out.println("Enter Your Salary");
                this.Salary=scanner.nextInt();
                break;
            default:
                System.out.println("Enter Invalid Option");
                break;
        }

        System.out.println("\nChoose under Displayed Option" +
                "\n1   Are your want to Modify your Credentials Again" +
                "\n2   Are your want to Go to Main Menu" +
                "\n3   Terminate the Program");
        int option= scanner.nextInt();
        if(option == 1){
            updateSpecificEmployeeDetailOnly();
        } else if (option == 2 ) {
            Main_Menu_List();
        }
        else {
            System.exit(0);
        }
    }
    public void updateAllEmployeeDetailsAtOnce(){

        System.out.println("Enter your First name");
        this.First_Name=scanner.nextLine();

        System.out.println("Enter your Last name");
        this.Last_Name= scanner.nextLine();

        System.out.println("Enter your (Date-Of-Birt) format type String");
        this.DOB=scanner.nextLine();

        System.out.println("Enter your Birth Place");
        this.BirthPlace=scanner.nextLine();

        System.out.println("Enter your Age");
        this.Age= scanner.nextInt();

        System.out.println("Enter your Salary");
        this.Salary=scanner.nextInt();

        System.out.println("Enter your Address");
        this.Address=scanner.nextLine();

        System.out.println("Enter your Postal_Code");
        this.Postal_Code= scanner.nextLong();    // Make a function in which your can only enter maximum seven digit of postal-code

        System.out.println("Enter your Department");
        this.Department=scanner.nextLine();

        System.out.println("\n\nAll your Details Updated SuccessFully \n\nRe-directing to Main Menu");
        Main_Menu_List();
    }

    public String getSerialNumber(){   // This is getter method for Returning Specific Method
        return this.SerialNumber;
    }

    protected void Main_Menu_List(){  //-------------------------------------
        System.out.println("---------------------------------------------------");
        System.out.println("---------------------------------------------------\n");
        System.out.println("Choose your Options to Perform Action" +
                "\n1  Create Employee" +
                "\n2  View All Employee Details" +
                "\n3  Update Specific Employee Details" +
                "\n4  Update All Details At Once" +
                "\n5  See Employee Serial Number" +
                "\n6  Delete Employee" +
                "\n7  Save Employee Data into File");

        int specificOption=scanner.nextInt();
        switch (specificOption){
            case 1:
                createEmployee();
                break;
            case 2:
                viewAllEmployees();
                break;
            case 3:
                updateSpecificEmployeeDetailOnly();
                break;
            case 4:
                updateAllEmployeeDetailsAtOnce();
                break;
            case 5:
                getSerialNumber();  //----------------------------------
                break;
            case 6:
                deleteEmployee();
                break;
            case 7:
                saveData();
                break;
            default:
                System.out.println("Invalid Option\n");
        }
        System.out.println("----------------------------------------------");
        System.out.println("Select Specific Option" +
                "\n1  Enter In Main menu" +
                "\n2  Exit To Program");
        int input = scanner.nextInt();
        if(input == 1){
            Main_Menu_List();
        }
        else {
            System.out.println("Thank Your For Using our Service");
            scanner.close();
        }

    }

    public void viewAllEmployees(){ // ------------------------------
    }

    public void deleteEmployee(){ //---------------------------------
    }
    public void saveData(){  //--------------------------------------
    };
}

class MainEmployee{
    public static void main(String[] args) {

        CreateEmployee Rahul = new CreateEmployee();
        Rahul.MainWelcomeScreen();
    }
}
